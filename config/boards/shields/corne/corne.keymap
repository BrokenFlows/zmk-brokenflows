/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define ARW     1
#define GAME    2
#define NUM     3
#define MEDIA   4
#define SWAP    5

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <225>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        mod_gresc: mod_gresc {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_GRESC";
            #binding-cells = <2>;
            tapping_term_ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&gresc>;
        };
    };

	combos {
		compatible = "zmk,combos";
		combo_quote {
			timeout-ms = <50>;
			key-positions = <21 22>;
			bindings = <&kp SQT>;
		};
	};
    keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | GAME |
// |  ESC |CTRLA|ALT S|CMD D|SHFTF|  G  |   |  H  |SHFTJ|CMD K|ALT L|CTRL;|  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | SHFT |
//                    | NMB |BKSPC| SPC |   | ENT | SPC | MDA |
                        bindings = <
   &kp TAB            &kp Q       &kp W      &kp E      &kp R       &kp T   &kp Y &kp U        &kp I      &kp O      &kp P          &tog GAME
   &mod_gresc LCTRL 0 &hm LCTRL A &hm LALT S &hm LCMD D &hm LSHFT F &kp G   &kp H &hm RSHFT J  &hm RCMD K &hm RALT L &hm RCTRL SEMI &kp SQT
   &kp LSHFT          &kp Z       &kp X      &kp C      &kp V       &kp B   &kp N &kp M        &kp COMMA  &kp DOT    &kp FSLH       &kp RSHFT
                                      &lt MEDIA DEL &kp BSPC &lt SWAP ESC   &lt ARW RET &kp SPACE &lt NUM TAB
                        >;
                };
                arrow_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |HOME | PU  |  U  | PD  | END |      |
// |      |     |     |     |     |     |   |     |  L  |  D  |  R  |     |      |
// |      |     |     |     |     |     |   |     |  L  |  D  |  U  |  R  |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans &trans &trans &trans &trans &trans   &kp HOME &kp PG_UP &kp UP   &kp PG_DN &kp END   &kp LC(LA(DEL))
   &trans &trans &trans &trans &trans &trans   &trans   &kp LEFT  &kp DOWN &kp RIGHT &trans    &trans
   &trans &trans &trans &trans &trans &trans   &trans   &kp LEFT  &kp DOWN &kp UP    &kp RIGHT &trans
                        &trans &trans &trans   &trans &trans &trans
                        >;
                };
                game_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |     |     |     |     |     | DEF  |
// | ESC  |  A  |  S  |  D  |  F  | F3  |   |     |     |     |     |     |      |
// | SHFT |  1  |  2  |  3  |  4  | F5  |   |     |     |     |     |     |      |
//                    | DEF | SPC | ENT |   |     |     |     |
                        bindings = <
   &kp TAB       &kp Q  &kp W  &kp E  &kp R  &kp T    &none &none &none &none &none &tog GAME
   &mt LCTRL ESC &kp A  &kp S  &kp D  &kp F  &kp F3   &none &none &none &none &none &none
   &kp LSHFT     &kp N1 &kp N2 &kp N3 &kp N4 &kp F5   &none &none &none &none &none &none
                        &tog GAME &kp SPACE &kp RET   &none &none &none
                        >;
                };
                num_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
// |  ENT |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | F12  |
// | SHFT | F1  | F2  | F3  | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 | F11  |
//                    |     | DEL | SPC |   | ENT | SPC |     |
                        bindings = <
   &kp ESC   &kp EXCL &kp AT  &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &kp DEL
   &kp RET   &kp N1   &kp N2  &kp N3   &kp N4   &kp N5      &kp N6    &kp N7   &kp N8    &kp N9   &kp N0   &kp F12
   &kp LSHFT &kp F1   &kp F2  &kp F3   &kp F4   &kp F5      &kp F6    &kp F7   &kp F8    &kp F9   &kp F10  &kp F11
                                 &trans &kp DEL &kp SPACE   &kp RET &kp SPACE &trans
                        >;
                };
                media_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |BTCLR|BTPRV|BTNXT|     |     |   |  7  |  8  |  9  |  -  |  =  |  \  |
// | CTRL |MUTE |V DN |V UP | PLY |     |   |  4  |  5  |  6  |  [  |  ]  | "|" |
// | SHFT |     | RW  | FF  |     |     |   |  1  |  2  |  3  |  {  |  }  |  `  |
//                    |     |BKSPC| SPC |   | RET |  0  |     |
                        bindings = <
   &kp  ESC  &bt BT_CLR &bt BT_PRV   &bt BT_NXT   &none    &none   &kp N7 &kp N8 &kp N9 &kp MINUS &kp EQUAL &kp BSLH
   &kp LCTRL &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_PP &none   &kp N4 &kp N5 &kp N6 &kp LBKT  &kp RBKT  &kp PIPE
   &kp LSHFT &none      &kp C_PREV   &kp C_NEXT   &none    &none   &kp N1 &kp N2 &kp N3 &kp LBRC  &kp RBRC  &kp GRAVE
                                       &trans &kp BSPC &kp SPACE   &kp RET &kp N0 &trans
                        >;
                };
                sh_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  P  |  O  |  I  |  U  |  Y  |   |  T  |  R  |  E  |  W  |  Q  | ESC  |
// |   '  |CTRL;|ALT L|CMD K|SHFTJ|  H  |   |  G  |SHFTF|CMD D|ALT S|CTRLA| TAB  |
// | SHFT |  /  |  .  |  ,  |  M  |  N  |   |  B  |  V  |  C  |  X  |  Z  | SHFT |
//                    |     | ENT |     |   | SPC |BKSPC|     |
                        bindings = <
   &kp ESC   &kp P          &kp O      &kp I      &kp U       &kp Y   &kp T &kp R        &kp E      &kp W      &kp Q          &tog ESC
   &kp SQT   &hm RCTRL SEMI &hm RALT L &hm RCMD K &hm RSHFT J &kp H   &kp G &hm LSHFT F  &hm LCMD D &hm LALT S &hm LCTRL A    &kp TAB
   &kp RSHFT &kp FSLH       &kp DOT    &kp COMMA  &kp M       &kp N   &kp B &kp V        &kp C      &kp X      &kp Z          &kp LSHFT
                                            &none &kp RET &trans   &kp SPACE &kp BSPC &none
                        >;
                };
        };
};
